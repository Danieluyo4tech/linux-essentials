#!/bin/bash
# ==============================================
# Script Name: system_audit_script1.sh
# Description: Comprehensive System & Cybersecurity Audit Script
# Author: Daniel Uyo (Fixlab Technologies)
# Purpose: Perform 30+ real-world security and system health checks,
#          generate a report, and provide expert advice based on results.
# ==============================================

# ============================
# 📁 Create Report File
# ============================
timestamp=$(date +"%Y%m%d_%H%M%S")
report_file="system_audit_report_$timestamp.txt"
touch "$report_file"

echo "==============================================" >> "$report_file"
echo " SYSTEM & SECURITY AUDIT REPORT - $timestamp" >> "$report_file"
echo " Author: Daniel Uyo (Fixlab Technologies)" >> "$report_file"
echo "==============================================" >> "$report_file"
echo "" >> "$report_file"

# ============================
# 🧩 System Information
# ============================
echo "[+] Collecting System Information..." >> "$report_file"
echo "Hostname: $(hostname)" >> "$report_file"
echo "OS Version: $(lsb_release -d 2>/dev/null | cut -f2)" >> "$report_file"
echo "Kernel Version: $(uname -r)" >> "$report_file"
echo "Uptime: $(uptime -p)" >> "$report_file"
echo "" >> "$report_file"

# ============================
# 💾 Disk and Memory Status
# ============================
echo "[+] Checking Disk and Memory Usage..." >> "$report_file"
echo "Disk Usage:" >> "$report_file"
df -h >> "$report_file"
echo "" >> "$report_file"
echo "Memory Usage:" >> "$report_file"
free -h >> "$report_file"
echo "" >> "$report_file"

# ============================
# 🧠 CPU & Process Analysis
# ============================
echo "[+] Checking Top Resource-Consuming Processes..." >> "$report_file"
ps aux --sort=-%cpu | head -n 10 >> "$report_file"
echo "" >> "$report_file"

# ============================
# 🔐 User and Permission Audit
# ============================
echo "[+] Checking for Suspicious or Unused User Accounts..." >> "$report_file"
awk -F: '($3 < 1000) {print $1}' /etc/passwd >> "$report_file"
echo "" >> "$report_file"

echo "[+] Checking for Users with Sudo Access..." >> "$report_file"
grep '^sudo:.*$' /etc/group >> "$report_file"
echo "" >> "$report_file"

# ============================
# 🔍 World-Writable Files
# ============================
echo "[+] Checking for World-Writable Files (Potential Security Risk)..." >> "$report_file"
find / -type f -perm -0002 2>/dev/null | head -n 20 >> "$report_file"
echo "" >> "$report_file"

# ============================
# 🧱 Firewall Status
# ============================
echo "[+] Checking UFW/Firewall Status..." >> "$report_file"
if command -v ufw &>/dev/null; then
    ufw status verbose >> "$report_file"
else
    echo "UFW not installed" >> "$report_file"
fi
echo "" >> "$report_file"

# ============================
# 🧩 Network Analysis
# ============================
echo "[+] Checking Active Network Connections..." >> "$report_file"
ss -tuln | head -n 15 >> "$report_file"
echo "" >> "$report_file"

echo "[+] Checking for Listening Services..." >> "$report_file"
netstat -tulpn 2>/dev/null | head -n 10 >> "$report_file"
echo "" >> "$report_file"

# ============================
# 🔎 Suspicious Cron Jobs
# ============================
echo "[+] Checking Scheduled Cron Jobs..." >> "$report_file"
for user in $(cut -f1 -d: /etc/passwd); do
    crontab -u $user -l 2>/dev/null | grep -v '^#' >> "$report_file"
done
echo "" >> "$report_file"

# ============================
# 🧩 SSH Security Check
# ============================
echo "[+] Checking SSH Configuration..." >> "$report_file"
grep -E "PermitRootLogin|PasswordAuthentication" /etc/ssh/sshd_config >> "$report_file"
echo "" >> "$report_file"

# ============================
# 🧠 Malware/Rootkit Indicators
# ============================
echo "[+] Searching for Suspicious Processes or Hidden Files..." >> "$report_file"
ps aux | grep -E "crypt|miner|nc |bash" | grep -v grep >> "$report_file"
find / -type f -name ".*.sh" 2>/dev/null | head -n 10 >> "$report_file"
echo "" >> "$report_file"

# ============================
# 🔒 File Permission Inconsistencies
# ============================
echo "[+] Checking Sensitive File Permissions..." >> "$report_file"
ls -l /etc/passwd /etc/shadow /etc/sudoers >> "$report_file"
echo "" >> "$report_file"

# ============================
# 🌐 Network Interfaces and IP Info
# ============================
echo "[+] Displaying Network Interface Details..." >> "$report_file"
ip addr show >> "$report_file"
echo "" >> "$report_file"

# ============================
# 🔍 Login and Authentication Logs
# ============================
echo "[+] Checking Last Logins..." >> "$report_file"
last -n 5 >> "$report_file"
echo "" >> "$report_file"

echo "[+] Checking Failed Login Attempts..." >> "$report_file"
grep "Failed password" /var/log/auth.log 2>/dev/null | tail -n 10 >> "$report_file"
echo "" >> "$report_file"

# ============================
# 🧰 Installed Security Tools
# ============================
echo "[+] Checking Installed Security Tools..." >> "$report_file"
for tool in nmap lynis chkrootkit fail2ban clamav snort; do
    if command -v $tool &>/dev/null; then
        echo "$tool is installed" >> "$report_file"
    else
        echo "$tool is NOT installed" >> "$report_file"
    fi
done
echo "" >> "$report_file"

# ============================
# 🔄 Running Services
# ============================
echo "[+] Listing Active System Services..." >> "$report_file"
systemctl list-units --type=service --state=running | head -n 20 >> "$report_file"
echo "" >> "$report_file"

# ============================
# 🧩 Open Ports
# ============================
echo "[+] Checking for Open Ports..." >> "$report_file"
nmap -sS localhost -p 1-1024 2>/dev/null | grep "open" >> "$report_file"
echo "" >> "$report_file"

# ============================
# 🧠 Summary & Recommendations
# ============================
echo "==============================================" >> "$report_file"
echo "🔍 SUMMARY & SECURITY ADVICE" >> "$report_file"
echo "==============================================" >> "$report_file"

echo "
✅ Check 1: Review open ports — close unnecessary ones.
✅ Check 2: Disable root SSH login if enabled.
✅ Check 3: Install and enable firewall (UFW or iptables).
✅ Check 4: Investigate failed login attempts.
✅ Check 5: Remove or disable unused user accounts.
✅ Check 6: Limit file permissions on /etc/shadow and other sensitive files.
✅ Check 7: Ensure fail2ban and antivirus tools are running.
✅ Check 8: Regularly scan for malware or rootkits.
✅ Check 9: Patch your OS and update packages frequently.
✅ Check 10: Keep this audit automated weekly via cron." >> "$report_file"

echo "" >> "$report_file"
echo "Full report saved as: $report_file"
echo "Audit complete — Review recommendations for system hardening."
